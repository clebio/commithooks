#!/usr/bin/env bash
#set -x

terra_fmt () {
    if [ -f '.module' ]
    then
        terra_fmt_modules
    fi

    terraform fmt -write=false -check=true
    if [ $? -ne 0 ];
    then
        echo "needs moar fmt'ing"
        exit -5
    fi
}

terra_fmt_modules () {
    if [ ! -f 'docs/README.md' ]
    then
        echo 'Terraform repos must have a `docs/README.md`'
        exit -3
    fi

    cat docs/README.md > ./README.md
    terraform-docs md . >> README.md
}

go_commit () {
    echo 'Stub for golang pre-commit hooks'
}

py_commit () {
    echo 'stub for python pre-commit hooks'
    # pylint requires a module directory. If git ls-files shows one a
    # few levels deep, how do we want to handle that?
}

declare -A FILTERS=(
    [tf]=terra_fmt
    [go]=go_commit
    [py]=py_commit)

for k in ${!FILTERS[@]}
do
    if [ "x$(git ls-files -- *.${k} | xargs)" != "x" ]
    then
        ${FILTERS[$k]}
    fi
done

exit 0
